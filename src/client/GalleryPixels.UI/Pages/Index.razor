@page "/"
@using GalleryPixels.UI.Masonry
@using GalleryPixels.UI.Domain.Services
@using GalleryPixels.UI.Domain.Models
@inject IMasonryGrid MasonryGrid
@inject IImagePlaceHolderService ImageService

<div class="container">
    @for (var i = 0; i < Media.Count; i++)
    {
        <div class="w-[100%] md:w-[40%] 2xl:w-[25%]">
            <div style="">
                <img class="lazyload rounded-md" data-src="@Media[i].Url" width="@(Media[i].Width)" height="@(Media[i].Height)" style="object-fit: cover;">
            </div>
        </div>
    }
</div>


@code
{
        private const string MasonryGridId = "container";
    private List<Media> Media { get; set; } = new();

    protected override void OnInitialized()
    {
        for (var i = 0; i < 100; i++)
        {
            Media.Add(ImageService.GetRandomImagePlaceHolder());
        }
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await MasonryGrid.InitAsync($".{MasonryGridId}", 20, Media.Count);
    }
}